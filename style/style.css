/* Using @include declare-font-face('FontName', 'font-filename', 400); */
@font-face {
  font-family: "gotham";
  src: url("../fonts/GothamPro-Light.eot");
  src: url("../fonts/GothamPro-Light.eot?#iefix") format("embedded-opentype"), url("../fonts/GothamPro-Light.woff") format("woff"), url("../fonts/GothamPro-Light.ttf") format("truetype"), url("../fonts/GothamPro-Light.svg#gotham") format("svg");
  font-weight: 200;
  font-style: normal; }

@font-face {
  font-family: "gotham";
  src: url("../fonts/GothamPro.eot");
  src: url("../fonts/GothamPro.eot?#iefix") format("embedded-opentype"), url("../fonts/GothamPro.woff") format("woff"), url("../fonts/GothamPro.ttf") format("truetype"), url("../fonts/GothamPro.svg#gotham") format("svg");
  font-weight: 400;
  font-style: normal; }

@font-face {
  font-family: "gotham";
  src: url("../fonts/GothamPro-Medium.eot");
  src: url("../fonts/GothamPro-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/GothamPro-Medium.woff") format("woff"), url("../fonts/GothamPro-Medium.ttf") format("truetype"), url("../fonts/GothamPro-Medium.svg#gotham") format("svg");
  font-weight: 500;
  font-style: normal; }

@font-face {
  font-family: "gotham";
  src: url("../fonts/GothamPro-Bold.eot");
  src: url("../fonts/GothamPro-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/GothamPro-Bold.woff") format("woff"), url("../fonts/GothamPro-Bold.ttf") format("truetype"), url("../fonts/GothamPro-Bold.svg#gotham") format("svg");
  font-weight: 700;
  font-style: normal; }

@font-face {
  font-family: "gotham";
  src: url("../fonts/GothamPro-Black.eot");
  src: url("../fonts/GothamPro-Black.eot?#iefix") format("embedded-opentype"), url("../fonts/GothamPro-Black.woff") format("woff"), url("../fonts/GothamPro-Black.ttf") format("truetype"), url("../fonts/GothamPro-Black.svg#gotham") format("svg");
  font-weight: 900;
  font-style: normal; }

@media screen and (-webkit-min-device-pixel-ratio: 0) {
  /* Using @include svg-font-face('FontName', 'font-filename', 400); */ }

* {
  margin: 0;
  padding: 0;
  outline: 0;
  box-sizing: border-box;
  -webkit-box-sizing: border-box; }

html {
  -webkit-font-smoothing: antialiased;
  -webkit-overflow-scrolling: touch;
  -webkit-text-size-adjust: none; }

a, a:hover, input, textarea, select {
  -webkit-tap-highlight-color: transparent;
  outline: 0 none; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: '';
  content: none; }

:focus {
  outline: 0; }

a img, fieldset, hr {
  border: 0; }

mark {
  background: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

td {
  vertical-align: middle; }

input, select, textarea {
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease;
  border-radius: 0;
  -webkit-appearance: none; }

input[type="submit"], input[type="button"], button {
  -webkit-appearance: none;
  cursor: pointer; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  color: #7d7d7d;
  opacity: 1; }

input:-moz-placeholder, textarea:-moz-placeholder {
  color: #7d7d7d;
  opacity: 1; }

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #7d7d7d;
  opacity: 1; }

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  color: #7d7d7d;
  opacity: 1; }

input:focus::-webkit-input-placeholder, textarea:focus::-webkit-input-placeholder {
  color: #fff;
  opacity: 1; }

input:focus:-moz-placeholder, textarea:focus:-moz-placeholder {
  color: #fff;
  opacity: 1; }

input:focus::-moz-placeholder, textarea:focus::-moz-placeholder {
  color: #fff;
  opacity: 1; }

input:focus:-ms-input-placeholder, textarea:focus:-ms-input-placeholder {
  color: #fff;
  opacity: 1; }

hr {
  clear: both;
  font-size: 0;
  overflow: hidden;
  display: block;
  height: 0; }

article, aside, details, figcaption, figure, footer, header, nav, section, summary, main {
  display: block; }

.alignleft {
  float: left; }

.alignright {
  float: right; }

img.alignleft {
  margin: 0 30px 10px 0; }

img.alignright {
  margin: 0 0 10px 30px; }

.aligncenter {
  margin-left: auto;
  margin-right: auto; }

img {
  max-width: 100%;
  height: auto;
  display: block; }

.valign {
  display: inline-block;
  vertical-align: middle;
  max-width: 94%; }

.vfix {
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  width: 0; }

.fullframe {
  height: 0;
  margin: 0;
  overflow: hidden;
  padding-bottom: 56.5%;
  position: relative;
  z-index: 0; }
  .fullframe > iframe, .fullframe > object, .fullframe > embed {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: -1; }

.selbel_w {
  position: relative;
  display: block;
  width: 100%;
  font: 400 14px/40px "gotham";
  height: 40px; }
  .selbel_w select {
    width: 100%;
    height: 100%;
    cursor: pointer;
    position: relative;
    display: block;
    z-index: 1;
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)"; }
    .selbel_w select + span {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: #fff;
      color: #555;
      padding: 0 10px;
      border-radius: 5px;
      border: 1px solid #eee; }
      .selbel_w select + span:after {
        content: '';
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 9px 5px 0 5px;
        border-color: #555 transparent transparent transparent;
        position: absolute;
        right: 13px;
        top: 16px; }
      .selbel_w select + span.err {
        border-color: #ef4036; }
    .selbel_w select option {
      padding: 5px; }

div.wpcf7 .wpcf7-form-control-wrap {
  display: block !important;
  margin-bottom: 20px;
  clear: both; }

div.wpcf7 .wpcf7-not-valid-tip {
  background: #fff;
  border: 1px solid #FF0000;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  cursor: pointer;
  font-family: "gotham";
  height: 30px;
  line-height: 30px;
  padding: 0 10px; }

div.wpcf7 .wpcf7-response-output {
  float: left;
  width: 100%;
  margin: 10px 0 0 0;
  font-family: "gotham";
  font-size: 14px;
  line-height: 20px;
  padding: 5px 20px;
  text-align: center; }

div.wpcf7 .ajax-loader {
  display: none; }

.bx-controls-direction a {
  position: absolute;
  top: 50%;
  -webkit-transform: translate(0, -50%);
  -moztransform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  transform: translate(0, -50%);
  width: 34px;
  height: 34px;
  z-index: 200;
  outline: 0; }
  .bx-controls-direction a.bx-prev {
    left: 0;
    background-position: 0 0; }
  .bx-controls-direction a.bx-next {
    right: 0;
    background-position: 100% 0; }

.bx-pager {
  position: absolute;
  bottom: 30px;
  width: 100%;
  left: 0;
  text-align: center;
  font-size: 0; }
  .bx-pager .bx-pager-item {
    display: inline-block; }
    .bx-pager .bx-pager-item a {
      display: inline-block;
      vertical-align: top;
      border-radius: 50%;
      width: 10px;
      height: 10px;
      margin: 0 3px;
      opacity: 0.5;
      background: #fff; }
      .bx-pager .bx-pager-item a:hover, .bx-pager .bx-pager-item a.active {
        opacity: 1; }

.error404 .content {
  text-align: center; }
  .error404 .content h1 {
    font-size: 75px;
    line-height: 1.2;
    padding-bottom: 40px;
    font-weight: 400; }
    .error404 .content h1 span {
      font-size: 100px;
      line-height: 1.2;
      color: #fbb900;
      font-weight: 700; }
  .error404 .content p {
    font-size: 25px; }

#menuOpen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: #222;
  height: 50px;
  display: none; }
  #menuOpen.opened span:before, #menuOpen.opened span:after {
    top: 0;
    left: 0;
    right: 0;
    background: #fff;
    -ms-box-shadow: none;
    -o-box-shadow: none;
    box-shadow: none; }
  #menuOpen.opened span:before {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: rotate(-45deg) translate(-7px, 7px);
    -ms-transform: rotate(-45deg) translate(-7px, 7px);
    transform: rotate(-45deg) translate(-7px, 7px); }
  #menuOpen.opened span:after {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-transform: rotate(45deg) translate(7px, 7px);
    -ms-transform: rotate(45deg) translate(7px, 7px);
    transform: rotate(45deg) translate(7px, 7px); }
  #menuOpen p {
    margin-left: 3%;
    color: #fff;
    font-size: 24px;
    text-transform: uppercase;
    line-height: 50px; }
  #menuOpen span {
    position: absolute;
    top: 50%;
    -webkit-transform: translate(0, -50%);
    -moztransform: translate(0, -50%);
    -ms-transform: translate(0, -50%);
    transform: translate(0, -50%);
    right: 3%;
    width: 27px;
    height: 27px;
    cursor: pointer;
    z-index: 300;
    -webkit-transition: all 0.4s ease;
    transition: all 0.4s ease; }
    #menuOpen span:before, #menuOpen span:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      box-shadow: 0 4px 0 0 #fff, 0 18px 0 0 #fff;
      -webkit-box-shadow: 0 4px 0 0 #fff, 0 18px 0 0 #fff;
      -moz-box-shadow: 0 4px 0 0 #fff, 0 18px 0 0 #fff;
      -webkit-transition: all 0.4s ease;
      transition: all 0.4s ease; }
    #menuOpen span:after {
      content: "";
      position: absolute;
      top: 7px;
      height: 4px;
      -ms-box-shadow: 0 4px 0 0 #fff;
      -o-box-shadow: 0 4px 0 0 #fff;
      box-shadow: 0 4px 0 0 #fff; }

/*
Flexbox grid @mixin
EXAMPLE
.flexbox {
    @include boxGrid(5, 4%);
}
*/
html {
  font: 400 15px/1.5714 "gotham", sans-serif; }

body {
  color: #414042;
  -webkit-box-direction: normal;
  -webkit-box-orient: vertical;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  min-height: 100vh; }

#main {
  overflow: hidden;
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 auto;
  -moz-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  width: 100%; }

.container {
  margin: 0 auto;
  width: 1140px;
  max-width: 94%;
  position: relative; }

.flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  justify-content: space-between; }

.alc {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  align-items: center; }

h1, h2, h3, h4, h5, h6 {
  font-weight: 400; }

h2 {
  font-size: 2.93333rem;
  line-height: 44px;
  font-weight: 900;
  text-transform: uppercase;
  text-align: center; }

h3 {
  font-size: 2.13333rem;
  line-height: 31px;
  font-weight: 900;
  text-transform: uppercase;
  text-align: center; }

h4 {
  font-size: 18px; }

a {
  color: #fbb900;
  text-decoration: none;
  -webkit-transition: all 0.4s ease;
  transition: all 0.4s ease; }
  a:hover {
    text-decoration: underline; }

header {
  background: #ffffff;
  padding: 25px 0; }
  header a {
    font-size: 14px;
    font-weight: 200; }
    header a:hover {
      text-decoration: none;
      color: #fbb900; }
  header .language span {
    font-weight: 200;
    color: #414042;
    margin-right: 6px; }
  header .language a {
    background: #fbb900;
    border-radius: 50%;
    color: #fff;
    font-size: 10px;
    font-weight: 700;
    text-transform: uppercase;
    padding: 7px; }
  header .personal_office {
    color: #111111;
    position: relative;
    padding-left: 30px; }
    header .personal_office:before {
      content: '';
      background: url("../images/my_room.png") no-repeat;
      height: 26px;
      width: 26px;
      top: 0;
      left: 0;
      position: absolute; }
  header .flex {
    -webkit-box-align: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    align-items: center; }

@media screen and (min-width: 1024px) {
  #mainMenu ul {
    font-size: 0; }
    #mainMenu ul li {
      display: inline-block;
      vertical-align: top; }
      #mainMenu ul li a {
        display: block;
        margin: 0 20px;
        color: #262626; }
      #mainMenu ul li:hover a, #mainMenu ul li.current-menu-item a {
        color: #fbb900; } }

.content p {
  padding-bottom: 25px;
  line-height: 1.8; }

.top {
  background: url("../images/top_bg.jpg") no-repeat 50% 50%/cover;
  padding: 100px 0;
  position: relative;
  z-index: 1; }
  .top:after {
    content: '';
    background: url("../images/top_car.png") no-repeat;
    height: 482px;
    width: 859px;
    bottom: 0;
    right: 0;
    position: absolute;
    z-index: 1; }

.cont_form {
  background: #ffffff;
  padding: 25px;
  width: 430px;
  margin: auto;
  border-radius: 5px;
  box-shadow: 0 0 13px rgba(0, 0, 0, 0.5); }
  .cont_form h3 {
    padding-bottom: 25px; }
  .cont_form .choice {
    text-align: center;
    margin-bottom: 20px; }
    .cont_form .choice .button {
      line-height: 30px;
      font-size: 11px;
      padding: 0 15px;
      margin: 0 15px;
      box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2);
      border: none; }
    .cont_form .choice .grey {
      background: #7d7d7d;
      border: solid 3px #fff;
      box-shadow: 0 0 8px rgba(0, 0, 0, 0.3); }
  .cont_form form {
    padding: 0 15px;
    position: relative;
    z-index: 10; }
    .cont_form form .button {
      display: block;
      margin: 0 auto; }
    .cont_form form .date {
      position: relative; }
      .cont_form form .date:after {
        content: '';
        background: url("../images/calendar.png") no-repeat;
        height: 26px;
        width: 23px;
        top: 50%;
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%);
        right: 10px;
        position: absolute; }
    .cont_form form .timer {
      color: #7d7d7d;
      border: 1px solid #fbb900;
      border-radius: 2px;
      padding: 10px;
      margin-bottom: 2.33333rem; }
      .cont_form form .timer .plus_minus {
        font-size: 14px;
        font-weight: 700; }
        .cont_form form .timer .plus_minus span:nth-last-child(2) {
          margin: 0 12px; }
      .cont_form form .timer .hour {
        font-size: 21px;
        font-weight: 200; }
      .cont_form form .timer p {
        padding-bottom: 5px;
        color: #cccccc;
        font-size: 11px;
        font-weight: 200;
        text-align: center; }
      .cont_form form .timer .button {
        border: none;
        box-shadow: none;
        font-size: 11px;
        letter-spacing: 0;
        font-weight: 500;
        line-height: 26px;
        padding: 0 10px;
        min-width: 58px;
        position: relative;
        z-index: 10; }

.info {
  background: url("../images/section2_bg.jpg") no-repeat 50% 50%/cover;
  padding: 100px -0px 50px; }
  .info .flex {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    -moz-justify-content: flex-end;
    justify-content: flex-end; }
    .info .flex > div {
      -webkit-flex-basis: 575px;
      -ms-flex-preferred-size: 575px;
      flex-basis: 575px; }
  .info p {
    font-weight: 200; }

.plan_work {
  background: url("../images/section3_bg.jpg") no-repeat 50% 50%/cover;
  padding-top: 100px;
  color: #fff;
  text-align: center; }
  .plan_work h2 {
    color: #ffffff;
    text-align: center;
    margin-bottom: 4rem; }
  .plan_work .items {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    -moz-justify-content: flex-start;
    justify-content: flex-start;
    -webkit-flex-flow: wrap;
    -ms-flex-flow: wrap;
    flex-flow: wrap;
    -webkit-transition: all 0.4s ease;
    transition: all 0.4s ease;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    margin: 0 -4.75%;
    width: 109.5%; }
    .plan_work .items > * {
      width: 23.83333%;
      margin: 0 4.75%6.33333em; }
  .plan_work .item:nth-child(-n+2) {
    position: relative; }
    .plan_work .item:nth-child(-n+2):after {
      content: '';
      background: url(../images/main_section3_arrow.png) no-repeat;
      height: 14px;
      width: 232px;
      right: -58%;
      top: 72px;
      position: absolute; }
  .plan_work img {
    margin: 0 auto 25px; }
  .plan_work h4 span {
    font-size: 21px;
    font-weight: 700; }
  .plan_work p {
    font-size: 12px; }

.choice_class {
  background: #ffffff;
  padding: 100px 0; }
  .choice_class h2 {
    font-size: 44px;
    margin-bottom: 50px; }
  .choice_class h4 {
    color: #111111;
    font-weight: 500;
    text-align: center;
    text-transform: uppercase; }
  .choice_class .swiper-pagination {
    top: 72px; }
  .choice_class .swiper-pagination-bullet-active {
    width: 18px !important;
    height: 18px !important;
    background: #fbb900 !important; }
  .choice_class .swiper-pagination-bullet {
    width: 13px;
    height: 13px;
    background-color: #7d7d7d;
    border-radius: 50%;
    -ms-box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    -o-box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    border: solid 2px rgba(255, 255, 255, 0.4);
    opacity: 1; }
  .choice_class .swiper-button-next, .choice_class .swiper-button-prev {
    background-image: none;
    background-color: #fbb900;
    top: 40%;
    color: #ffffff;
    border-radius: 50%;
    height: 48px;
    width: 48px;
    text-align: center;
    font-size: 31px;
    line-height: 1.3;
    border: solid 3px white;
    box-shadow: 0 0 8px rgba(0, 0, 0, 0.3); }
  .choice_class .items {
    -ms-flex-pack: distribute;
    -webkit-justify-content: space-around;
    -moz-justify-content: space-around;
    justify-content: space-around; }
    .choice_class .items img {
      margin: 0 auto 25px; }
    .choice_class .items p {
      padding-bottom: 35px; }

.why_we {
  background: url("../images/section5_bg.jpg") no-repeat 50% 50%/cover;
  padding-top: 100px; }
  .why_we h2 {
    color: #ffffff;
    padding-bottom: 4rem; }
  .why_we .items {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    -moz-justify-content: flex-start;
    justify-content: flex-start;
    -webkit-flex-flow: wrap;
    -ms-flex-flow: wrap;
    flex-flow: wrap;
    -webkit-transition: all 0.4s ease;
    transition: all 0.4s ease;
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    margin: 0 -1.5%;
    width: 103%;
    text-align: center;
    color: #fff; }
    .why_we .items > * {
      width: 22%;
      margin: 0 1.5%1.875em; }
    .why_we .items img {
      margin: 0 auto 25px; }
    .why_we .items h4 {
      font-weight: 700; }
    .why_we .items p {
      font-size: 12px;
      line-height: 1.3;
      font-weight: 200; }

.services {
  background: url("../images/yellowBG.jpg") no-repeat 50% 50%/cover; }

input[type="text"], input[type="email"], input[type="tel"], input[type="search"], input[type="password"], textarea {
  height: 40px;
  width: 100%;
  border: 1px solid #fbb900;
  border-radius: 2px;
  background-color: #fff;
  padding: 0 10px;
  font-family: "gotham";
  font-size: 14px;
  margin-bottom: 2rem; }
  input[type="text"]:focus, input[type="email"]:focus, input[type="tel"]:focus, input[type="search"]:focus, input[type="password"]:focus, textarea:focus {
    color: #ffffff;
    background-color: #fbb900;
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2); }

textarea {
  resize: none;
  height: 100px;
  padding: 10px; }

.button {
  display: inline-block;
  line-height: 40px;
  padding: 0 20px;
  background: #fbb900;
  color: #fff;
  font-family: "gotham";
  font-size: 16px;
  font-weight: 400;
  letter-spacing: 0.3px;
  text-align: center;
  text-transform: uppercase;
  border-radius: 12px;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
  border: solid 3px #fff; }
  .button:hover {
    opacity: 0.8;
    text-decoration: none; }

.white {
  color: #414042;
  background-color: #fff;
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.54);
  border: solid 3px #fbb900; }

footer {
  background: #fbb900;
  padding: 20px 0 70px;
  position: relative; }
  footer:after {
    content: '';
    background: url("../images/square.png");
    height: 22px;
    left: 0;
    right: 0;
    bottom: 30px;
    position: absolute; }
  footer .button:hover {
    color: #414042; }
  footer a {
    font-size: 14px;
    color: #111111;
    font-weight: 400; }
    footer a:hover {
      text-decoration: none;
      color: #ffffff; }
  footer .foot_menu {
    -webkit-column-count: 2;
    -moz-column-count: 2;
    -ms-column-count: 2;
    column-count: 2;
    -webkit-column-gap: 50px;
    -moz-column-gap: 50px;
    -ms-column-gap: 50px;
    column-gap: 50px; }
    footer .foot_menu li {
      margin-bottom: 10px; }
  footer .call_us a {
    margin-bottom: 20px; }
  footer .cnt {
    display: block;
    font-size: 17px;
    padding-left: 35px;
    color: #111111; }
  footer .phone {
    position: relative; }
    footer .phone:before {
      content: '';
      background: url("../images/phoneLogo.png") no-repeat;
      height: 20px;
      width: 18px;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      left: 0;
      position: absolute; }
  footer .mail {
    text-transform: uppercase;
    position: relative; }
    footer .mail:before {
      content: '';
      background: url("../images/mail_logo.png") no-repeat;
      height: 18px;
      width: 22px;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      left: 0;
      position: absolute; }
  footer .languages {
    margin-bottom: 20px; }
    footer .languages span {
      color: #111111;
      font-size: 14px; }
    footer .languages a {
      border: 1px solid #fff;
      border-radius: 50%;
      color: #ffffff;
      padding: 0 3px;
      margin: 0 7px; }
      footer .languages a:hover {
        color: #fbb900;
        border-color: #fbb900;
        background: #ffffff; }
  footer .personal_office {
    position: relative;
    padding-left: 27px; }
    footer .personal_office:before {
      content: '';
      background: url("../images/footMyOffice.png");
      height: 22px;
      width: 22px;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      left: 0;
      position: absolute; }
  footer .scl {
    margin-top: 20px; }
    footer .scl p {
      padding-bottom: 10px; }

@media screen and (max-width: 1024px) {
  #menuOpen {
    display: block; }
    #menuOpen.opened + #mainMenu {
      -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
      transform: translateX(0); }
  #mainMenu {
    position: absolute;
    top: 50px;
    width: 100%;
    -webkit-transform: translateX(100%);
    -ms-transform: translateX(100%);
    transform: translateX(100%);
    -webkit-transition: all 0.4s ease;
    transition: all 0.4s ease;
    background: rgba(26, 26, 26, 0.95);
    right: 0;
    bottom: 0;
    overflow: auto; }
    #mainMenu ul li {
      display: inline-block;
      width: 100%; }
      #mainMenu ul li a {
        display: block;
        margin: 0;
        color: #fff;
        font-size: 18px;
        padding: 15px 3%;
        border-bottom: 1px solid #000; }
      #mainMenu ul li:hover a {
        background: none; }
      #mainMenu ul li.current-menu-item > a {
        background: #fbb900; } }

/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64, */
